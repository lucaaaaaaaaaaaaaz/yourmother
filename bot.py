import requests
import time
from telegram import Bot

# Configura√ß√µes do Telegram
TELEGRAM_TOKEN = "8111108757:AAEGDutj4RjR5yKLff2Y_dbbqWfW15QH8Ssm"
TELEGRAM_CHAT_ID = "1024065103"

# Endere√ßo de interesse na Solana
SOLANA_ADDRESS = "Eo7WjKq67rjJQSZxS6z3YkapzY3eMj6Xy8X5EQVn5UaB"

# Inicializa o bot do Telegram
bot = Bot(token=TELEGRAM_TOKEN)

# Lista para armazenar assinaturas j√° processadas
processed_signatures = set()

def send_telegram_message(message):
    """Envia mensagem no Telegram."""
    try:
        bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)
        print("üîî Alerta enviado no Telegram!")
    except Exception as e:
        print(f"‚ùå Erro ao enviar mensagem: {e}")

def get_latest_transactions():
    """Obt√©m as √∫ltimas transa√ß√µes do endere√ßo monitorado."""
    response = requests.post("https://api.mainnet-beta.solana.com", json={
        "jsonrpc": "2.0",
        "id": 1,
        "method": "getSignaturesForAddress",
        "params": [SOLANA_ADDRESS, {"limit": 50}]  # Ajust√°vel
    })

    if response.status_code == 200:
        return response.json().get("result", [])
    return []

def get_transaction_details(signature):
    """Obt√©m detalhes de uma transa√ß√£o espec√≠fica."""
    response = requests.post("https://api.mainnet-beta.solana.com", json={
        "jsonrpc": "2.0",
        "id": 1,
        "method": "getTransaction",
        "params": [signature, "jsonParsed"]
    })

    if response.status_code == 200:
        return response.json().get("result", {})
    return {}

def monitor_transactions():
    print("üöÄ Monitoramento iniciado...")
    
    while True:
        transactions = get_latest_transactions()

        for tx in transactions:
            signature = tx["signature"]

            # Ignorar se j√° analisamos essa transa√ß√£o
            if signature in processed_signatures:
                continue
            
            # Adiciona ao hist√≥rico de transa√ß√µes processadas
            processed_signatures.add(signature)

            # Obt√©m detalhes da transa√ß√£o
            tx_details = get_transaction_details(signature)
            log_messages = tx_details.get("meta", {}).get("logMessages", [])

            # Verifica se a instru√ß√£o desejada est√° nos logs
            for log in log_messages:
                if "InitializePermissionlessConstantProductPoolWithConfig" in log:
                    message = f"üö® Nova pool detectada!\nüîó Tx: https://solana.fm/tx/{signature}\nüìú Instru√ß√£o: {log}"
                    send_telegram_message(message)
                    break  # Para evitar m√∫ltiplos alertas da mesma transa√ß√£o

        # Aguarda um tempo antes de verificar novamente
        time.sleep(10)  # Ajust√°vel para um monitoramento mais r√°pido/lento

if __name__ == "__main__":
    monitor_transactions()
